<div><slot></slot></div>
<button data-close>
  <emo-ji>x</emo-ji>
  <visually-hidden>close</visually-hidden>
</button>

<script>
class MonkeyHint extends HTMLElement {
  static register(tagName) {
    if ('customElements' in window) {
      customElements.define(tagName || 'monkey-hint', MonkeyHint);
    }
  }

  static observedAttributes = ['data-for', 'data-missed'];

  attributeChangedCallback(name, oldValue, newValue) {
    switch (name) {
      case 'data-for':
        this.#setSrc();
        break;
    }

    if (!this.src) return;
    this.showHide();
  }

  src;
  dialog;
  close;
  dismissed;

  connectedCallback() {
    this.dialog = this.querySelector('dialog');
    this.close = this.querySelector('[data-close]');
    if (this.close) this.close.addEventListener('click', this.dismiss);
    this.#setSrc();
    this.showHide();
  }

  disconnectedCallback() {
    if (this.close) this.close.removeEventListener('click', this.dismiss);
    this.src.removeEventListener('write', this.#onWriteEvent);
  }

  showHide = (stat) => {
    const missed = stat || this.src.stats.missed;
    const limit = this.dataset.missed || 15;

    if (missed >= limit && !this.dismissed) {
      this.dialog
        ? this.dialog.show()
        : this.removeAttribute('hidden');
    } else {
      this.dialog
        ? this.dialog.close()
        : this.setAttribute('hidden', '');
    }
  }

  #onWriteEvent = (event) => {
    if (event.detail.missed === 0) { this.dismissed = false; }
    this.showHide(event.detail.missed);
  }

  dismiss = () => {
    this.dismissed = true;
    this.src.focusEditor();
    this.showHide();
  }

  #setSrc = () => {
    if (this.src) {
      this.src.removeEventListener('write', this.#onWriteEvent);
    }

    this.src = this.#findSrc();

    if (!this.src) {
      throw 'No monkey-write source found';
    }

    this.src.addEventListener('write', this.#onWriteEvent);
  }

  #findSrc = () => (this.dataset.for)
    ? document.getElementById(this.dataset.for)
    : document.querySelector('monkey-write');
}

MonkeyHint.register();
</script>
